#!/bin/bash
set -e

# ComfyUI Installation Script with Conda Environment
# For Ubuntu Server 24.04 with RTX 3090
# Author: AI Assistant
# Version: 1.0

echo "🚀 ComfyUI Installation Script Starting..."
echo "📋 This script will:"
echo "   - Install Miniconda"
echo "   - Create conda environment for ComfyUI"
echo "   - Install ComfyUI with comfy-cli"
echo "   - Install PyTorch with CUDA support"
echo "   - Configure automatic startup"
echo "   - Create management scripts"
echo ""

# Check prerequisites
if ! command -v nvidia-smi &> /dev/null; then
    echo "❌ NVIDIA drivers not found. Please install NVIDIA drivers first."
    exit 1
fi

echo "✅ NVIDIA drivers found:"
nvidia-smi --query-gpu=name,driver_version --format=csv,noheader,nounits

# Install system dependencies
echo "📦 Installing system dependencies..."
sudo apt update
sudo apt install -y wget git curl build-essential

# Install Miniconda if not present
if ! command -v conda &> /dev/null; then
    echo "📥 Installing Miniconda..."
    cd /tmp
    wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3

    # Initialize conda
    $HOME/miniconda3/bin/conda init bash
    source ~/.bashrc
    echo "✅ Miniconda installed"
else
    echo "✅ Conda already installed"
fi

# Source conda
source $HOME/miniconda3/etc/profile.d/conda.sh

# Create ComfyUI environment
echo "🐍 Creating ComfyUI conda environment..."
conda create -n comfyui python=3.11 -y
conda activate comfyui

echo "✅ ComfyUI environment created with Python $(python --version)"

# Install comfy-cli and ComfyUI
echo "📦 Installing comfy-cli and ComfyUI..."
pip install comfy-cli

echo "⬇️ Installing ComfyUI..."
comfy install

# Install PyTorch with CUDA support
echo "🔥 Installing PyTorch with CUDA support for RTX 3090..."
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Verify installation
echo "🧪 Verifying installation..."
python -c "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'CUDA available: {torch.cuda.is_available()}'); print(f'CUDA version: {torch.version.cuda}'); print(f'GPU count: {torch.cuda.device_count()}')"

# Create bashrc configuration
echo "⚙️ Configuring bash environment..."
cat >> ~/.bashrc << 'EOFBASH'

# ===== ComfyUI Environment Configuration =====
# Auto-generated by ComfyUI installation script

start_comfyui() {
    echo "🚀 Starting ComfyUI environment..."
    if conda activate comfyui 2>/dev/null; then
        echo "✅ ComfyUI conda environment activated"
        echo "📍 Environment: $(conda info --envs | grep comfyui | awk '{print $2}')"
        echo "🐍 Python: $(python --version)"

        # Aliases for ComfyUI management
        alias comfy-start='comfy launch -- --listen 0.0.0.0'
        alias comfy-status='systemctl --user status comfyui.service'
        alias comfy-logs='journalctl --user -f -u comfyui.service'
        alias comfy-restart='systemctl --user restart comfyui.service'

        echo "🎯 Available commands:"
        echo "   comfy-start  - Start ComfyUI manually"
        echo "   comfy-status - Check service status"
        echo "   comfy-logs   - View service logs"
        echo "   comfy-restart- Restart service"
    else
        echo "❌ Failed to activate ComfyUI environment"
    fi
}

# Auto-activate on terminal start (comment out if not desired)
start_comfyui
EOFBASH

# Create systemd service
echo "🔧 Creating systemd service..."
mkdir -p ~/.config/systemd/user

cat > ~/.config/systemd/user/comfyui.service << 'EOFSERVICE'
[Unit]
Description=ComfyUI AI Image Generation Service
After=network.target

[Service]
Type=simple
WorkingDirectory=%h/comfy
Environment=PATH=%h/miniconda3/envs/comfyui/bin:%h/miniconda3/bin:/usr/local/bin:/usr/bin:/bin
ExecStart=%h/miniconda3/bin/conda run -n comfyui comfy launch -- --listen 0.0.0.0
Restart=always
RestartSec=10

[Install]
WantedBy=default.target
EOFSERVICE

# Create management script
echo "📝 Creating management script..."
cat > ~/comfyui-manager.sh << 'EOFMANAGER'
#!/bin/bash

# ComfyUI Management Script

show_status() {
    echo "=== ComfyUI System Status ==="
    echo "🔧 Conda Base: $HOME/miniconda3"
    echo "🐍 Environment: comfyui"
    echo "📁 ComfyUI Location: $HOME/comfy"
    echo "🚀 Service Status:"
    systemctl --user status comfyui.service --no-pager -l
    echo ""
    echo "🌐 Access: http://$(hostname -I | awk '{print $1}'):8188"
}

case $1 in
    "status"|"") show_status ;;
    "start") systemctl --user start comfyui.service && sleep 3 && show_status ;;
    "stop") systemctl --user stop comfyui.service ;;
    "restart") systemctl --user restart comfyui.service && sleep 3 && show_status ;;
    "logs") journalctl --user -f -u comfyui.service ;;
    "enable") systemctl --user enable comfyui.service ;;
    "disable") systemctl --user disable comfyui.service ;;
    *) echo "Usage: $0 [status|start|stop|restart|logs|enable|disable]" ;;
esac
EOFMANAGER

chmod +x ~/comfyui-manager.sh

# Setup systemd service
echo "🚀 Setting up systemd service..."
systemctl --user daemon-reload
systemctl --user enable comfyui.service

# Enable user lingering for boot startup
sudo loginctl enable-linger $USER

# Add alias to bashrc
echo "alias comfyui='$HOME/comfyui-manager.sh'" >> ~/.bashrc

echo ""
echo "🎉 ComfyUI Installation Complete!"
echo ""
echo "📋 Next steps:"
echo "1. Restart terminal or run: source ~/.bashrc"
echo "2. Start service: ~/comfyui-manager.sh start"
echo "3. Access ComfyUI: http://$(hostname -I | awk '{print $1}'):8188"
echo ""
echo "💡 Management commands:"
echo "   comfyui status   - Check status"
echo "   comfyui start    - Start service"  
echo "   comfyui logs     - View logs"
echo ""
echo "🔧 Service will auto-start on boot"
echo "✅ Installation completed successfully!"
